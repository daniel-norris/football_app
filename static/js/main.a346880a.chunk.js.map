{"version":3,"sources":["assets/icons/star-solid.svg","assets/icons/trophy-solid.svg","assets/icons/check-double-solid.svg","assets/icons/random-solid.svg","assets/icons/plus-square-solid.svg","assets/icons/globe.svg","assets/icons/twitter.svg","assets/icons/github.svg","history.js","components/Landing/Landing.js","data/actions/state.js","axios.js","components/Players/Players.js","components/Players/index.js","data/actions/api.js","components/Teams/Teams.js","components/Teams/index.js","components/Randomise/Randomise.js","components/Randomise/index.js","components/Footer/Footer.js","components/Field/Field.js","components/Field/index.js","components/Demo/Demo.js","components/Header/Header.js","components/App.js","data/reducer.js","data/initial.js","index.js"],"names":["module","exports","createHashHistory","Landing","className","alt","src","require","to","updateGame","data","type","game","axios","create","baseURL","headers","Accept","Players","props","state","first","last","age","skill","position","handleCreatePlayer","bind","handleFirstNameChange","handleLastNameChange","handleAgeChange","handleSkillChange","handlePositionChange","handleRandomise","e","this","setState","currentTarget","value","preventDefault","players","length","players_per_side","uploaded","handlePlayerUpload","id","onChange","placeholder","htmlFor","name","style","marginTop","onClick","Array","from","item","index","key","Component","connect","dispatch","getState","post","then","get","postPlayers","team1Id","team_1","team2Id","team_2","teamSize","i","j","Math","floor","random","swap","team1","slice","map","player","team_id","team2","history","push","Teams","players_side","handleSquadSubmit","handleSquad1NameChange","handleSquad2NameChange","handlePlayersPerSideChange","handleCreateTeams","teams","createTeams","postTeams","Randomise","loaded","handleGameUpdate","winChance","winner","colspan","first_name","last_name","getGame","Footer","href","Field","Demo","Header","App","exact","path","render","match","params","team1SumSkill","reduce","acc","val","team2SumSkill","sumBothTeamSkill","toTwoDecimal","toFixed","isTie","whoGreaterSkill","reducer","action","createPlayer","predictWinner","randomiseTeams","initial","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a346880a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/star-solid.f94558c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/trophy-solid.c493da06.svg\";","module.exports = __webpack_public_path__ + \"static/media/check-double-solid.71fbc47c.svg\";","module.exports = __webpack_public_path__ + \"static/media/random-solid.60236532.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus-square-solid.30b07bf3.svg\";","module.exports = __webpack_public_path__ + \"static/media/globe.50b0a548.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.15abbb01.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.a6c899e8.svg\";","import { createHashHistory } from 'history';\nexport default createHashHistory();","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Landing = () => (\n    <main className=\"landing\">\n\n        <section className=\"landing__feature\">\n            <div className=\"flex\">\n                <img className=\"landing__img\" alt=\"\" src={require(\"../../assets/icons/check-double-solid.svg\")}/>\n                <div>\n                    <h2 className=\"display-5\">Draft</h2>\n                    <p className=\"text-3\">Draft your team names. Choose the max number of players per side.</p>\n                </div>\n            </div>\n            <div className=\"flex\">\n                <img className=\"landing__img\" alt=\"\" src={require(\"../../assets/icons/random-solid.svg\")}/>\n                <div>\n                    <h2 className=\"display-5\">Select</h2>\n                    <p className=\"text-3\">Create your team's player roster and attribute each player with a position, age and skill rating.</p>\n                </div>\n            </div>\n            <div className=\"flex\">\n                <img className=\"landing__img\" alt=\"\" src={require(\"../../assets/icons/trophy-solid.svg\")}/>\n                <div>\n                    <h2 className=\"display-5\">Predict</h2>\n                    <p className=\"text-3\">Allow our algorithms to randomly assign your two team's player rosters and predict a winner.</p>\n                </div>\n            </div>\n        </section>\n        <div className=\"flex justify-center\">\n            <Link to=\"/draft\">\n                <button className=\"btn\">Start</button>\n            </Link>\n        </div>\n    </main>\n);\n\nexport default Landing;\n\n\n\n\n","// action creator for new player array\nexport const createPlayer = ({ first, last, age, skill, position }) => {\n    return {\n        type: \"CREATE_PLAYER\",\n        first: first,\n        last: last,\n        age: age,\n        skill: skill,\n        position: position,\n    };\n};\n\n// action creator for new game object containing teams\nexport const createTeams = (data) => {\n    return {\n        type: \"CREATE_TEAMS\",\n        teams: data\n    };\n};\n\n// action creator for new game object containing players and teams\nexport const updateGame = (data) => {\n    return {\n        type: \"UPDATE_GAME\",\n        game: data\n    };\n};\n\n/**\n *  O(n) algorithm to shuffle players\n *  the function also splits the players array into two parts and assigns each team a team_id that corresponds with id on api\n *  saves the new teams in state to later be pushed as an array of player objects to api\n */\nexport const randomiseTeams = () => {\n\n    return (dispatch, getState) => {\n\n        // copying the players array of objects in state\n        const players = [...getState().players]\n\n        // assigning the api team ids for the currently created teams to variables\n        const team1Id = getState().game.team_1.id\n        const team2Id = getState().game.team_2.id\n\n        // splitting the size of the currently created roster of players by half\n        let teamSize = players.length / 2;\n\n        // using the Fisher-Yates shuffle to swap each element of array with random one before it\n        for (let i = players.length - 1; i > 0; i--) {\n            let j = Math.floor(Math.random() * (i + 1));\n            let swap = players[i];\n            players[i] = players[j];\n            players[j] = swap;\n        }\n\n        // splitting half of new randomised player array into team1\n        let team1 = players.slice(0, teamSize);\n\n        // creating a new key value pair with the players api team id\n        team1.map((player, index) => (\n            player.team_id = team1Id\n        ))\n\n        // splitting second half into team2\n        let team2 = players.slice(teamSize, players.length);\n\n        // creating key value pair with api team id\n        team2.map((player, index) => (\n            player.team_id = team2Id\n        ))\n\n        // dispatching to reducer to save in state\n        dispatch({\n            type: \"RANDOMISE_TEAMS\",\n            team1: team1,\n            team2: team2,\n        });\n    }\n}\n","// import the library version of axios\nimport axios from \"axios\";\n\n// create a version of axios with useful defaults\nexport default axios.create({\n    baseURL: \"https://norrisdan.com/api/\",\n    headers: {\n        // make sure we get JSON back\n        Accept: \"application/json\",\n\n        /**\n         * Authorization: \"Bearer ...\",\n         */\n    },\n});\n","import React, { Component } from 'react';\n\nclass Players extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { first: \"\", last: \"\", age: \"\", skill: 0, position: \"\" }\n        this.handleCreatePlayer = this.handleCreatePlayer.bind(this);\n        this.handleFirstNameChange = this.handleFirstNameChange.bind(this);\n        this.handleLastNameChange = this.handleLastNameChange.bind(this);\n        this.handleAgeChange = this.handleAgeChange.bind(this);\n        this.handleSkillChange = this.handleSkillChange.bind(this);\n        this.handlePositionChange = this.handlePositionChange.bind(this);\n        this.handleRandomise = this.handleRandomise.bind(this);\n    }\n\n    handleFirstNameChange(e) {\n        this.setState({ first: e.currentTarget.value })\n    }\n\n    handleLastNameChange(e) {\n        this.setState({ last: e.currentTarget.value })\n    }\n\n    handleAgeChange(e) {\n        this.setState({ age: e.currentTarget.value })\n    }\n\n    handleSkillChange(e) {\n        this.setState({ skill: e.currentTarget.value })\n    }\n\n    handlePositionChange(e) {\n        this.setState({ position: e.currentTarget.value })\n    }\n\n    handleCreatePlayer(e) {\n        e.preventDefault();\n        const { players, game } = this.props;\n        // validating fields are completed before creating new player\n        if((players.length < game.players_per_side * 2) &&\n            this.state.first &&\n            this.state.last &&\n            this.state.age &&\n            this.state.position &&\n            this.state.skill) {\n                this.props.handleCreatePlayer(this.state);\n        }\n    }\n\n    handleRandomise(e) {\n        e.preventDefault();\n        const { players, game, uploaded } = this.props;\n        // validating that user has not exceeed max number of players\n        if(players.length === game.players_per_side * 2) {\n            this.props.handlePlayerUpload(game.id);\n            this.props.handleRandomise(game, uploaded);\n        }\n    }\n\n    render() {\n\n        const { players, game } = this.props;\n        const { first, last, age, skill, position } = this.state;\n\n        return (\n            <>\n                <form className=\"players__wrapper\">\n                    <h1 className=\"display-5 players__title\">Create your players</h1>\n                    <label className=\"b-text-3\">Player first name</label>\n                    <input\n                        onChange={ (e) => this.handleFirstNameChange(e) }\n                        type=\"text\"\n                        placeholder=\"Player first name...\"\n                        value={ this.state.first }>\n                    </input>\n                    { first ? <p className=\"hidden\">error</p> : <p className=\"error-3\">Enter a player name.</p> }\n\n                    <label className=\"b-text-3\">Player last name</label>\n                    <input\n                        onChange={ (e) => this.handleLastNameChange(e) }\n                        type=\"text\"\n                        placeholder=\"Player last name...\"\n                        value={ this.state.last }>\n                    </input>\n                    { last ? <p className=\"hidden\">error</p> : <p className=\"error-3\">Enter a player surname.</p> }\n\n                    <label className=\"b-text-3\">Age</label>\n                    <input\n                        onChange={ (e) => this.handleAgeChange(e) }\n                        type=\"number\"\n                        placeholder=\"Player age...\"\n                        value={ this.state.age }>\n                    </input>\n                    { age ? <p className=\"hidden\">error</p> : <p className=\"error-3\">Enter player age.</p> }\n\n                    <p className=\"b-text-3\">Skill</p>\n                    <div className=\"players__skill\">\n                        <div className=\"flex column\">\n                            <label className=\"b-text-3 flex align-center\" htmlFor=\"skill1\">1\n                                <img className=\"icon\" alt=\"\" src={require(\"../../assets/icons/star-solid.svg\")}/>\n                            </label>\n                            <input type=\"radio\" id=\"skill1\" name=\"skill\" value=\"1\"\n                                onChange={ (e) => this.handleSkillChange(e) }\n                            />\n                        </div>\n                        <div className=\"flex column\">\n                            <label className=\"b-text-3 flex align-center\" htmlFor=\"skill2\">2\n                                <img className=\"icon\" alt=\"\" src={require(\"../../assets/icons/star-solid.svg\")}/>\n                            </label>\n                            <input type=\"radio\" id=\"skill2\" name=\"skill\" value=\"2\"\n                                onChange={ (e) => this.handleSkillChange(e) }\n                            />\n                        </div>\n                        <div className=\"flex column\">\n                            <label className=\"b-text-3 flex align-center\" htmlFor=\"skill3\">3\n                                <img className=\"icon\" alt=\"\" src={require(\"../../assets/icons/star-solid.svg\")}/>\n                            </label>\n                            <input type=\"radio\" id=\"skill3\" name=\"skill\" value=\"3\"\n                                onChange={ (e) => this.handleSkillChange(e) }/>\n                        </div>\n                        <div className=\"flex column\">\n                            <label className=\"b-text-3 flex align-center\" htmlFor=\"skill4\">4\n                                <img className=\"icon\" alt=\"\" src={require(\"../../assets/icons/star-solid.svg\")}/>\n                            </label>\n                            <input type=\"radio\" id=\"skill4\" name=\"skill\" value=\"4\"\n                                onChange={ (e) => this.handleSkillChange(e) }/>\n                        </div>\n                        <div className=\"flex column\">\n                            <label className=\"b-text-3 flex align-center\" htmlFor=\"skill5\">5\n                                <img className=\"icon\" alt=\"\" src={require(\"../../assets/icons/star-solid.svg\")}/>\n                            </label>\n                            <input type=\"radio\" id=\"skill5\" name=\"skill\" value=\"5\"\n                                onChange={ (e) => this.handleSkillChange(e) }/>\n                        </div>\n                    </div>\n                    { skill ? <p className=\"hidden\">error</p> : <p className=\"error-3\">Enter a player skill rating.</p> }\n\n                    <div className=\"players__position\">\n                        <label className=\"b-text-3\" htmlFor=\"position\">Position</label>\n                        <select name=\"position\" id=\"position\" onChange={ (e) => this.handlePositionChange(e) }>\n                            <option value=\"\">Player position...</option>\n                            <option value=\"Goalkeeper\">Goalkeeper</option>\n                            <option value=\"Midfielder\">Midfielder</option>\n                            <option value=\"Forward\">Forward</option>\n                        </select>\n                    </div>\n                    { position ? <p className=\"hidden\">error</p> : <p style={{ marginTop: \".2rem\"}} className=\"error-3\">Enter player position.</p> }\n\n                    <div className=\"flex align-center\">\n                        <button onClick={ (e) => this.handleCreatePlayer(e) } className=\"players__create\">\n                            <img className=\"icon\" alt=\"\" src={require(\"../../assets/icons/plus-square-solid.svg\")}/>\n                            <p className=\"b-text-3\">Create</p>\n                        </button>\n                        <p className=\"players__tally display-5\">{ players.length } / { game.players_per_side * 2 }</p>\n                    </div>\n\n                    <div>\n                        <button onClick={ (e) => this.handleRandomise(e) } className=\"btn\">Randomise</button>\n                    </div>\n\n                </form>\n\n                <div className=\"field__teams\">\n                    {/* creates an array from the players side integer in state\n                        iterates n times to create enough markers */}\n                    { game.players_per_side <= 9 ? (Array.from({length: game.players_per_side}, (item, index) =>\n                        <div key={ index } className={`player__marker${index + 1}`}>P{ index + 1 }</div>\n                        )) : null\n                    }\n                    {/* creates an array from the players side integer in state\n                        iterates n times to create enough markers */}\n                    { game.players_per_side <= 9 ? (Array.from({length: game.players_per_side}, (item, index) =>\n                        <div key={ index } className={`player2__marker${index + 1}`}>P{ index + 1 }</div>\n                        )) : null\n                    }\n                </div>\n            </>\n        )\n    }\n}\n\n\nexport default Players;","import { connect } from 'react-redux';\nimport { createPlayer, randomiseTeams } from '../../data/actions/state';\nimport { postPlayers } from '../../data/actions/api';\n\n// adding programmatic navigation after http request below\nimport history from '../../history';\n\nimport Players from './Players';\n\nconst mapStateToProps = state => {\n    return {\n        players: state.players,\n        game: state.game,\n        uploaded: state.uploaded,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\n    return {\n        handleCreatePlayer: data => dispatch(createPlayer(data)),\n        handlePlayerUpload: (id) => dispatch(postPlayers(id)),\n        handleRandomise: (data, uploaded) => { dispatch(randomiseTeams());\n            history.push(`/draft/players/${data.id}/view`); }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Players);\n\n\n","import { createTeams, updateGame } from './state';\n\n// import API routes\nimport axios from '../../axios';\n\nexport const postPlayers = (id) => {\n    return (dispatch, getState) => {\n        /**\n         *  POST /players\n         */\n        axios.post(\"/players\", { players: getState().players }).then(() => {\n            /**\n             * chained promise to overcome delays in post request above\n             *\n             *  GET /games/id\n             */\n            return axios.get(`/games/${id}`);\n            }).then(({ data }) => {\n                dispatch(updateGame(data.data));\n            });\n        }\n    }\n\nexport const postTeams = ({ team_1, team_2, players_side }) => {\n    return (dispatch) => {\n        /**\n         *  POST /games\n         */\n        axios.post(\"/games\", {\n            team_1: team_1,\n            team_2: team_2,\n            players_side: players_side\n        }).then(({ data }) => {\n            dispatch(createTeams(data.data));\n        })\n    };\n};\n\nexport const getGame = (id) => {\n    return (dispatch) => {\n        /**\n         * handles componentdidmount if user navigates away from page\n         *\n         *  GET /games/id\n         */\n        axios.get(`/games/${id}`).then(({ data }) => {\n            dispatch(updateGame(data.data));\n        })\n    };\n};\n\n","import React, { Component } from 'react';\n\nclass Teams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { team_1: \"\", team_2: \"\", players_side: 0 };\n        this.handleSquadSubmit = this.handleSquadSubmit.bind(this);\n        this.handleSquad1NameChange = this.handleSquad1NameChange.bind(this);\n        this.handleSquad2NameChange = this.handleSquad2NameChange.bind(this);\n        this.handlePlayersPerSideChange = this.handlePlayersPerSideChange.bind(this);\n    }\n\n    handleSquadSubmit(e) {\n        e.preventDefault();\n        const { team_1, team_2, players_side } = this.state;\n\n        // validate that fields are completed\n        if(team_1 && team_2 && (players_side <= 9 && players_side > 0)) {\n            this.props.handleCreateTeams(this.state);\n        }\n    }\n\n    handleSquad1NameChange(e) {\n        this.setState({ team_1: e.currentTarget.value });\n    }\n\n    handleSquad2NameChange(e) {\n        this.setState({ team_2: e.currentTarget.value });\n    }\n\n    handlePlayersPerSideChange(e) {\n        this.setState({ players_side: e.currentTarget.value })\n    }\n\n    render() {\n\n        const { players_side, team_1, team_2 } = this.state;\n\n        return(\n            <div className=\"teams__container\">\n                <form>\n\n                    <h1 className=\"teams__title display-5\">Create your teams</h1>\n\n                    <label className=\"b-text-3\" htmlFor=\"squad1\">Squad 1</label>\n                    <input\n                        onChange={ (e) => this.handleSquad1NameChange(e) }\n                        type=\"text\"\n                        id=\"squad1\"\n                        name=\"squad1\"\n                        placeholder=\"Enter squad name...\">\n                    </input>\n                    { team_1 ? <p className=\"hidden\">error</p> : <p className=\"error-3\">Enter a team name for Squad 1.</p> }\n\n                    <label className=\"b-text-3\" htmlFor=\"squad2\">Squad 2</label>\n                    <input\n                        onChange={ (e) => this.handleSquad2NameChange(e) }\n                        type=\"text\"\n                        id=\"squad2\"\n                        name=\"squad2\"\n                        placeholder=\"Enter squad name...\">\n                    </input>\n                    { team_2 ? <p className=\"hidden\">error</p> : <p className=\"error-3\">Enter a team name for Squad 2.</p> }\n\n                    <section className=\"flex column\">\n                        <label className=\"b-text-3\">Players per side</label>\n                        <input\n                            onChange={ (e) => this.handlePlayersPerSideChange(e) }\n                            type=\"number\"\n                            placeholder=\"Choose team size...\">\n                        </input>\n                        { players_side > 9 || players_side === 0 ? <p className=\"error-3\">Enter a team size of between 1 - 9 players.</p> : <p className=\"hidden\">error</p> }\n\n\n                        <div>\n                            <button\n                                onClick={ (e) => this.handleSquadSubmit(e) }\n                                className=\"btn teams__btn\">Confirm\n                            </button>\n                        </div>\n                    </section>\n                </form>\n\n                <div className=\"field__teams\">\n                    {/* creates an array from the players side integer in state */}\n                    { players_side <= 9 ? (Array.from({length: players_side}, (item, index) =>\n                        <div key={ index } className={`player__marker${index + 1}`}>P{ index + 1 }</div>\n                        )) : null\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Teams;","import { connect } from 'react-redux';\nimport { postTeams } from '../../data/actions/api';\n\n// adding programmatic navigation after http request below\nimport history from '../../history';\n\nimport Teams from './Teams';\n\nconst mapStateToProps = state => {\n    return {\n        teams: state.teams,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\n    return {\n            handleCreateTeams: data => { dispatch(postTeams(data));\n            history.push(\"/draft/players\")\n        },\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Teams);\n\n\n","import React, { Component } from 'react';\n\nclass Randomise extends Component {\n\n    componentDidMount() {\n        // checks that player has navigated away from the page before calling GET request for game data\n        if(!this.props.loaded && !this.props.uploaded) {\n            this.props.handleGameUpdate(this.props.id);\n        }\n    }\n\n    render() {\n\n        const { game, loaded } = this.props;\n\n        return !loaded ? <p className=\"display-5\">Loading...</p> : (\n            <main >\n                <section className=\"randomise__section\">\n                    <div className=\"flex\">\n                        <h1 className=\"display-5 randomise__title\">{ game['team_1'].name } - </h1>\n                        <p className=\"display-5\">{ game['team_1'].winChance * 100 }%</p>\n                        {/* checking if player has won */}\n                        { (game.winner === 3 || game.winner === 1) ? (\n                            <img className=\"icon-med\" alt=\"\" src={require(\"../../assets/icons/trophy-solid.svg\")}/>\n                        ) : null }\n                    </div>\n                    <table className=\"randomise__table\">\n                        <thead className=\"randomise__table-header\">\n                            <tr className=\"b-text-3\">\n                                <th>First Name</th>\n                                <th>Last Name</th>\n                                <th>Age</th>\n                                <th>Skill</th>\n                                <th>Position</th>\n                            </tr>\n                        </thead>\n                        <tbody className=\"randomise__table-body\">\n                            { game['team_1'].players.length === 0 ? <tr><td colspan=\"5\">No players to display</td></tr> : (\n                                game['team_1'].players.map((player, index) => (\n                                    <tr key={ index }>\n                                        <td>{ player.first_name }</td>\n                                        <td>{ player.last_name }</td>\n                                        <td>{ player.age }</td>\n                                        <td>{ player.skill }</td>\n                                        <td>{ player.position }</td>\n                                    </tr>\n                                ))\n                            )}\n                        </tbody>\n                    </table>\n                </section>\n                <section className=\"randomise__section\">\n                    <div className=\"flex\">\n                        <h1 className=\"display-5 randomise__title\">{ game['team_2'].name } - </h1>\n                        <p className=\"display-5\">{ game['team_2'].winChance * 100 }%</p>\n                        {/* checking if player has won */}\n                        { (game.winner === 3 || game.winner === 2) ? (\n                            <img className=\"icon-med\" alt=\"\" src={require(\"../../assets/icons/trophy-solid.svg\")}/>\n                        ) : null }\n                    </div>\n                    <table className=\"randomise__table\">\n                        <thead className=\"randomise__table-header\">\n                            <tr className=\"b-text-3\">\n                                <th>First Name</th>\n                                <th>Last Name</th>\n                                <th>Age</th>\n                                <th>Skill</th>\n                                <th>Position</th>\n                            </tr>\n                        </thead>\n                        <tbody className=\"randomise__table-body\">\n                            { game['team_2'].players.length === 0 ? <tr><td colspan=\"5\">No players to display</td></tr> : (\n                                game['team_2'].players.map((player, index) => (\n                                    <tr key={ index }>\n                                        <td>{ player.first_name }</td>\n                                        <td>{ player.last_name }</td>\n                                        <td>{ player.age }</td>\n                                        <td>{ player.skill }</td>\n                                        <td>{ player.position }</td>\n                                    </tr>\n                                ))\n                            )}\n                        </tbody>\n                    </table>\n                </section>\n            </main>\n        )\n    }\n}\n\nexport default Randomise;","import { connect } from 'react-redux';\nimport { getGame } from '../../data/actions/api';\n\nimport Randomise from './Randomise';\n\nconst mapStateToProps = state => {\n    return {\n        game: state.game,\n        loaded: state.loaded,\n        uploaded: state.uploaded,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleGameUpdate: id => dispatch(getGame(id)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Randomise);\n\n\n","import React from 'react';\n\nconst Footer = () => (\n    <footer className=\"footer\">\n        <div className=\"footer__wrapper\">\n            <div className=\"flex\">\n                <a className=\"footer__social\" href=\"https://norrisdan.com\" >\n                    <img className=\"footer__icon\" alt=\"\" src={require(\"../../assets/icons/globe.svg\")}/>\n                    <p className=\"text-3\">norrisdan.com</p>\n                </a>\n                <a className=\"footer__social\" href=\"https://twitter.com/danielpnorris\">\n                    <img className=\"footer__icon\" alt=\"\" src={require(\"../../assets/icons/twitter.svg\")}/>\n                    <p className=\"text-3\">@danielpnorris</p>\n                </a>\n                <a className=\"footer__social\" href=\"https://github.com/daniel-norris\">\n                    <img className=\"footer__icon\" alt=\"\" src={require(\"../../assets/icons/github.svg\")}/>\n                    <p className=\"text-3\">@daniel-norris</p>\n                </a>\n            </div>\n            <p className=\"text-3\">Copyright, 2020. Dan Norris</p>\n        </div>\n    </footer>\n)\n\nexport default Footer;","import React, { Component } from 'react';\n\nclass Field extends Component {\n\n    render() {\n\n        const { game, loaded } = this.props;\n\n        return !loaded ? null : (\n            <div className=\"field__teams\">\n\n                <a id=\"attribution\" href=\"https://www.vecteezy.com/free-vector/play\">Play Vectors by Vecteezy</a>\n\n                { game['team_1'].players.map((player, index) => (\n                    // iterating over players to create n markers with player initials\n                    <div key={ index } className={`player__marker${index + 1}`}>\n                        { player.first_name[0] }. { player.last_name[0] }.\n                    </div>\n                ))}\n                { game['team_2'].players.map((player, index) => (\n                    // iterating over players to create n markers with player initials\n                    <div key={ index } className={`player2__marker${index + 1}`}>\n                        { player.first_name[0] }. { player.last_name[0] }.\n                    </div>\n                ))}\n            </div>\n        )\n    }\n}\n\nexport default Field;","import { connect } from 'react-redux';\n\nimport Field from './Field';\n\nconst mapStateToProps = state => {\n    return {\n        game: state.game,\n        loaded: state.loaded,\n    };\n};\n\nexport default connect(mapStateToProps)(Field);\n\n\n","import React from 'react';\n\nconst Demo = () => (\n    <div className=\"field__landing\">\n        <div className=\"demo__marker1\">P1</div>\n        <div className=\"demo__marker2\">P2</div>\n        <div className=\"demo__marker3\">P3</div>\n        <div className=\"demo__marker4\">P4</div>\n        <div className=\"demo__marker5\">P5</div>\n        <div className=\"demo__marker6\">P6</div>\n    </div>\n)\n\nexport default Demo;","import React from 'react';\n\nconst Header = () => (\n    <header className=\"header\">\n        <a href=\"https://daniel-norris.github.io/football_app/#/\">\n            <h1 className=\"logo\">Foo<span className=\"logo__highlight\">Draft</span></h1>\n        </a>\n    </header>\n);\n\nexport default Header;","import React from 'react';\n\n/* routing */\nimport {\n    Router,\n    Route,\n    Switch\n} from 'react-router-dom';\nimport history from '../history';\n\n/* components */\nimport Landing from './Landing/Landing';\nimport Players from './Players/index.js';\nimport Teams from './Teams/index.js';\nimport Randomise from './Randomise/index.js';\nimport Footer from './Footer/Footer';\nimport Field from './Field/index.js';\nimport Demo from './Demo/Demo';\nimport Header from './Header/Header';\n\nconst App = () => {\n    return (\n        <Router history={history}>\n\n            <Header/>\n\n            <div className=\"container\">\n\n                <Switch>\n                    <Route exact path=\"/\">\n                        <div className=\"content-wrap\">\n                            <Demo/>\n                            <Landing />\n                        </div>\n                    </Route>\n\n                    <Route exact path=\"/draft\">\n                        <div className=\"content-wrap\">\n                            <Teams/>\n                        </div>\n                    </Route>\n\n                    <Route exact path=\"/draft/players\">\n                        <div className=\"content-wrap\">\n                            <div className=\"teams__container\">\n                                <Players/>\n                            </div>\n                        </div>\n                    </Route>\n\n                    <Route exact path=\"/draft/players/:id/view\" render={({ match }) => (\n                        <div className=\"content-wrap\">\n                            <div className=\"randomise__container\">\n                                <Field/>\n                                <Randomise id={match.params.id}/>\n                            </div>\n                        </div>\n                    )}>\n                    </Route>\n\n                <p>404. No page found.</p>\n\n                </Switch>\n\n                <Footer />\n\n            </div>\n\n        </Router>\n    )\n}\n\nexport default App;\n","// result of the Fisher-Yates shuffle in state.js - this is updating state with temporary team1 and team2 objects\nexport const randomiseTeams = (state, { team1, team2 }) => ({\n    ...state,\n    team1: team1,\n    team2: team2,\n    uploaded: true,\n})\n\n// creating players individually in state in an array to later be sent via POST to api\nexport const createPlayer = (state, { first, last, age, skill, position }) => ({\n    ...state,\n    players: [\n        ...state.players, {\n            first: first,\n            last: last,\n            skill: skill,\n            age: age,\n            position: position,\n        }\n    ],\n})\n\n// api response is creating a game object in state which contains teams\nexport const createTeams = (state, { teams }) => ({\n    ...state,\n    game: teams\n})\n\n// updating state with new game object in state which contains teams and players\nexport const updateGame = (state, { game }) => ({\n    ...state,\n    game: game,\n    loaded: true,\n})\n\n// mapping through player array for team 1 and adding all the skill ratings together using reduce\nexport const team1SumSkill = ({ game }) => {\n    return game['team_1'].players.map((player, index) => player.skill).reduce((acc, val) => +acc + +val, 0);\n}\n\n// mapping through player array for team 2 and adding all the skill ratings together using reduce\nexport const team2SumSkill = ({ game }) => {\n    return game['team_2'].players.map((player, index) => player.skill).reduce((acc, val) => +acc + +val, 0);\n}\n\n// sum of both teams aggregate skill ratings\nexport const sumBothTeamSkill = state => {\n    return team1SumSkill(state) + team2SumSkill(state);\n}\n\n// rounded win % chance to 2 decimals\nexport const toTwoDecimal = value => {\n    return +value.toFixed(2);\n}\n\n// returns truthy if aggregate skill ratings are equal\nexport const isTie = state => {\n    return team1SumSkill(state) === team2SumSkill(state);\n}\n\n// which team has the greater aggregate skill rating\nexport const whoGreaterSkill = state => {\n    return team1SumSkill(state) > team2SumSkill(state) ? 1 : 2;\n}\n\n/**\n * passed state object after updateGame() completes\n * calculates both the predicted winner and the win % chance rounded to two decimals for each team\n * @param {*} state\n */\nexport const predictWinner = state => ({\n    ...state,\n    game: {\n        ...state.game,\n        winner: isTie(state) ? 3 : (whoGreaterSkill(state)),\n        team_1: {\n            ...state.game['team_1'],\n            winChance: toTwoDecimal(team1SumSkill(state) / sumBothTeamSkill(state)),\n        },\n        team_2: {\n            ...state.game['team_2'],\n            winChance: toTwoDecimal(team2SumSkill(state) / sumBothTeamSkill(state)),\n        }\n    }\n})\n\nexport const reducer = (state, action) => {\n    switch (action.type) {\n        case \"CREATE_PLAYER\": return createPlayer(state, action);\n        case \"CREATE_TEAMS\": return createTeams(state, action);\n        case \"UPDATE_GAME\": return predictWinner(updateGame(state, action));\n        case \"RANDOMISE_TEAMS\": return randomiseTeams(state, action);\n        default: return state;\n    }\n}\n\nexport default reducer;","const initial = {\n    players: [],\n    game: [],\n    team1: [],\n    team2: [],\n    loaded: false,\n    uploaded: false,\n}\n\nexport default initial;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport App from './components/App';\n\n// import redux\nimport { createStore, applyMiddleware, compose } from 'redux';\n\n// import redux components\nimport reducer from './data/reducer';\nimport initial from './data/initial';\n\n// import react-redux connector\nimport { Provider } from 'react-redux';\n\n// import thunk middleware for dispatching api requests\nimport thunk from 'redux-thunk';\n\n// setup for middleware localstorage\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducer,\n  initial,\n  composeEnhancers(applyMiddleware(thunk)) // remove localstorage and use thunk by passing through applymiddleware\n);\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}